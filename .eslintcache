[{"/Users/fangyugong/weather-app/src/index.js":"1","/Users/fangyugong/weather-app/src/App.js":"2","/Users/fangyugong/weather-app/src/reportWebVitals.js":"3"},{"size":672,"mtime":1610955417857,"results":"4","hashOfConfig":"5"},{"size":6877,"mtime":1611036975298,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610941932328,"results":"7","hashOfConfig":"8"},{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"24kdy3",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1kxkxqd","/Users/fangyugong/weather-app/src/index.js",[],["18","19"],"/Users/fangyugong/weather-app/src/App.js",["20","21"],"/*\n * @Date: 2021-01-18 11:52:12\n * @LastEditors: Fane Kung\n * @LastEditTime: 2021-01-19 14:16:15\n * @FilePath: /weather-app/src/App.js\n */\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { ThemeProvider } from '@emotion/react';\nimport './App.css';\nimport dayjs from 'dayjs';\nimport { ReactComponent as DayCloudyIcon } from './images/day-cloudy.svg';\nimport { ReactComponent as AirFlowIcon } from './images/airFlow.svg';\nimport { ReactComponent as RainIcon } from './images/rain.svg';\nimport { ReactComponent as RefreshIcon } from './images/refresh.svg';\nimport { ReactComponent as LoadingIcon } from './images/loading.svg';\n\n\n\n\nconst Container = styled.div`\n    background-color: ${({theme}) => theme.backgroundColor};\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  `;\n\nconst WeatherCard = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  background-color: ${({ theme }) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 30px 15px;\n`;\n\n\nconst theme = {\n  light: {\n    backgroundColor: '#ededed',\n    foregroundColor: '#f9f9f9',\n    boxShadow: '0 1px 3px 0 #999999',\n    titleColor: '#212121',\n    temperatureColor: '#757575',\n    textColor: '#828282',\n  },\n  dark: {\n    backgroundColor: '#1F2022',\n    foregroundColor: '#121416',\n    boxShadow:\n      '0 1px 4px 0 rgba(12, 12, 13, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.15)',\n    titleColor: '#f9f9fa',\n    temperatureColor: '#dddddd',\n    textColor: '#cccccc',\n  },\n};\n\n// 透過 props 取得傳進來的資料\n// props 會是 {theme: \"dark\", children: \"台北市\"}\nconst Location = styled.div`\n  ${(props) => console.log(props)}\n  font-size: 28px;\n  color: ${({ theme }) => theme.titleColor};\n  margin-bottom: 20px;\n`;\n\n\n\nconst Description = styled.div`\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 30px;\n`;\n\nconst CurrentWeather = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst Temperature = styled.div`\n  color: ${({ theme }) => theme.temperatureColor};\n  font-size: 96px;\n  font-weight: 300;\n  display: flex;\n  \n`;\n\nconst Celsius = styled.div`\n  font-weight: normal;\n  font-size: 42px;\n`;\n\nconst AirFlow = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 20px;\n  svg{\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst Rain = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n  svg{\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst Refresh = styled.div`\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  font-size: 12px;\n  display: inline-flex;\n  align-items: flex-end;\n  color: ${({ theme }) => theme.textColor};\n  svg{\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n    margin-left: 15px;\n    animation: rotate infinite 1.5s linear;\n    animation-duration: ${({ isLoading }) => (isLoading ? '1.5s' : '0s')}; \n  }\n  @keyframes rotate {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nconst DayCloudy = styled(DayCloudyIcon)`\n  flex-basis: 30%;\n`;\n// 將之前取得的授權碼存成一個常數\nconst AUTHORIZATION_KEY = 'CWB-B4674869-76B7-4450-9330-CE848FAA909C';\nconst LOCATION_NAME = '臺中';\n\nconst App = () => {\n  console.log('invoke function component');\n  // 使用 useState 並定義 currentTheme 的預設值為 light\n  const [currentTheme, setCurrentTheme] = useState('dark');\n  // 定義會使用到的資料初始狀態\n  const [currentWeather, setCurrentWeather] = useState({\n    locationName: '臺中市',\n    description: '多雲時晴',\n    windSpeed: 1.1,\n    temperature: 22.9,\n    rainPossibility: 0,\n    observationTime: '2021-01-18 12:00:00',\n    isLoading: true,\n  });\n\n  \n\n  //  加入useEffect 參數式需要放入函式\n  useEffect(() => {\n    console.log('execute function in useEffect');\n    fetchCurrentWeather()\n  }, []);\n\n\n\n  const fetchCurrentWeather = () => {\n    setCurrentWeather((prevState) => ({\n        ...prevState,\n        isLoading: true,\n    }));\n    fetch(/* 中央氣象局 API */\n      `https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${AUTHORIZATION_KEY}&locationName=${LOCATION_NAME}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('data', data);\n        //STEP 1 定義 `locationData` 把回傳的資料中會用到的部分取出來\n        const locationData = data.records.location[0];\n\n        //將風速（WDSD）和氣溫（TEMP）的資料取出\n        // STEP 2：過濾資料\n        const weatherElements = locationData.weatherElement.reduce(\n          (neededElement, item) => {\n            if (['WDSD', 'TEMP', 'Weather'].includes(item.elementName)) {\n              neededElement[item.elementName] = item.elementValue;\n            }\n            return neededElement;\n          },\n          {}\n        );\n        //更新 React 資料狀態\n        setCurrentWeather({\n          ...currentWeather,\n          observationTime: locationData.time.obsTime,\n          locationName: locationData.locationName,\n          temperature: weatherElements.TEMP,\n          windSpeed: weatherElements.WDSD,\n          description: weatherElements.Weather,\n          rainPossibility: 60,\n          isLoading: false,\n        });\n      })\n  };\n  \n  const {\n    observationTime,\n    locationName,\n    description,\n    windSpeed,\n    temperature,\n    rainPossibility,\n    isLoading,\n  } = currentWeather;\n  return (\n    <ThemeProvider theme={theme[currentTheme]}>\n      <Container>\n        {console.log('render, isLoading: ', isLoading)}\n        <WeatherCard>\n          <Location>{locationName}</Location>\n          <Description>{description}</Description>\n          <CurrentWeather>\n            <Temperature>\n              {Math.round(temperature)}<Celsius>°C</Celsius>\n            </Temperature>\n            <DayCloudy />\n          </CurrentWeather>\n          <AirFlow>\n            <AirFlowIcon />\n          {windSpeed} m/h\n        </AirFlow>\n          <Rain>\n            <RainIcon />{rainPossibility}%\n          </Rain>\n          <Refresh onClick={fetchCurrentWeather} isLoading={isLoading}>\n            最後觀測時間：{new Intl.DateTimeFormat('zh-TW', {\n            hour: 'numeric',\n            minute: 'numeric',\n          }).format(dayjs(observationTime))} {''}\n          {/* 當 isLoading 為 true 時顯示 LoadingIcon 否則顯示 RefreshIcon */}\n          {isLoading ? <LoadingIcon/> : <RefreshIcon />}\n          </Refresh>\n        </WeatherCard>\n      </Container>\n    </ThemeProvider>\n    \n  );\n}\n\nexport default App;\n","/Users/fangyugong/weather-app/src/reportWebVitals.js",[],["22","23"],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":159,"column":24,"nodeType":"30","messageId":"31","endLine":159,"endColumn":39},{"ruleId":"32","severity":1,"message":"33","line":177,"column":6,"nodeType":"34","endLine":177,"endColumn":8,"suggestions":"35"},{"ruleId":"24","replacedBy":"36"},{"ruleId":"26","replacedBy":"37"},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'setCurrentTheme' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCurrentWeather'. Either include it or remove the dependency array.","ArrayExpression",["40"],["38"],["39"],"no-global-assign","no-unsafe-negation",{"desc":"41","fix":"42"},"Update the dependencies array to be: [fetchCurrentWeather]",{"range":"43","text":"44"},[4028,4030],"[fetchCurrentWeather]"]